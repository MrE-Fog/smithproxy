#include <gtest/gtest.h>

#include <ext/hpack/hpack.hpp>


void decode_print(std::vector<uint8_t>& vec) {
    HPACK::decoder_t dec;

    if (dec.decode(vec)) {
        for (auto& [ hdr, vlist ] : dec.headers()) {

            for(auto const& hdr_elem: vlist)
                std::cout << "Frame: header/" << hdr << ": " << hdr_elem << "\n";
        }
    } else {
        std::cout << "Frame: hpack decode error";
    }
}

TEST(HPack, RootCurl_Request) {

    const uint8_t data[] = {
            0x82, 0x41, 0x89, 0xf1, 0xe3, 0xc2, 0xf6, 0x1c, 0xe9, 0x5c, 0x9e, 0xff, 0x87, 0x84, 0x40, 0x92,
            0xb6, 0xb9, 0xac, 0x1c, 0x85, 0x58, 0xd5, 0x20, 0xa4, 0xb6, 0xc2, 0xad, 0x61, 0x7b, 0x5a, 0x54,
            0x25, 0x1f, 0x01, 0x31, 0x7a, 0xd1, 0xd0, 0x7f, 0x66, 0xa2, 0x81, 0xb0, 0xda, 0xe0, 0x53, 0xfa,
            0xfc, 0x08, 0x7e, 0xd4, 0xce, 0x6a, 0xad, 0xf2, 0xa7, 0x97, 0x9c, 0x89, 0xc6, 0xbf, 0xb5, 0x21,
            0xae, 0xba, 0x0b, 0xc8, 0xb1, 0xe6, 0x32, 0x58, 0x6d, 0x97, 0x57, 0x65, 0xc5, 0x3f, 0xac, 0xd8,
            0xf7, 0xe8, 0xcf, 0xf4, 0xa5, 0x06, 0xea, 0x55, 0x31, 0x14, 0x9d, 0x4f, 0xfd, 0xa9, 0x7a, 0x7b,
            0x0f, 0x49, 0x58, 0x7d, 0xe5, 0xc0, 0xbb, 0x4e, 0xb6, 0xf2, 0xef, 0x3a, 0xa6, 0xe1, 0xca, 0x3b,
            0x0c, 0xc3, 0x6c, 0xba, 0xbb, 0x2e, 0x7f, 0x53, 0xe5, 0x49, 0x7c, 0xa5, 0x89, 0xd3, 0x4d, 0x1f,
            0x43, 0xae, 0xba, 0x0c, 0x41, 0xa4, 0xc7, 0xa9, 0x8f, 0x33, 0xa6, 0x9a, 0x3f, 0xdf, 0x9a, 0x68,
            0xfa, 0x1d, 0x75, 0xd0, 0x62, 0x0d, 0x26, 0x3d, 0x4c, 0x79, 0xa6, 0x8f, 0xbe, 0xd0, 0x01, 0x77,
            0xfe, 0x8d, 0x48, 0xe6, 0x2b, 0x03, 0xee, 0x69, 0x7e, 0x8d, 0x48, 0xe6, 0x2b, 0x1e, 0x0b, 0x1d,
            0x7f, 0x46, 0xa4, 0x73, 0x15, 0x81, 0xd7, 0x54, 0xdf, 0x5f, 0x2c, 0x7c, 0xfd, 0xf6, 0x80, 0x0b,
            0xbd, 0xf4, 0x3a, 0xeb, 0xa0, 0xc4, 0x1a, 0x4c, 0x7a, 0x98, 0x41, 0xa6, 0xa8, 0xb2, 0x2c, 0x5f,
            0x24, 0x9c, 0x75, 0x4c, 0x5f, 0xbe, 0xf0, 0x46, 0xcf, 0xdf, 0x68, 0x00, 0xbb, 0xff, 0x40, 0x85,
            0x41, 0x48, 0xb4, 0xd5, 0x93, 0x01, 0x31, 0x40, 0x8a, 0x41, 0x48, 0xb4, 0xa5, 0x49, 0x27, 0x59,
            0x06, 0x49, 0x7f, 0x87, 0x25, 0x87, 0x42, 0x16, 0x41, 0x92, 0x5f, 0x40, 0x8a, 0x41, 0x48, 0xb4,
            0xa5, 0x49, 0x27, 0x5a, 0x93, 0xc8, 0x5f, 0x86, 0xa8, 0x7d, 0xcd, 0x30, 0xd2, 0x5f, 0x40, 0x8a,
            0x41, 0x48, 0xb4, 0xa5, 0x49, 0x27, 0x5a, 0xd4, 0x16, 0xcf, 0x02, 0x3f, 0x31, 0x40, 0x8a, 0x41,
            0x48, 0xb4, 0xa5, 0x49, 0x27, 0x5a, 0x42, 0xa1, 0x3f, 0x86, 0x90, 0xe4, 0xb6, 0x92, 0xd4, 0x9f,
            0x50, 0x8d, 0x9b, 0xd9, 0xab, 0xfa, 0x52, 0x42, 0xcb, 0x40, 0xd2, 0x5f, 0xa5, 0x23, 0xb3, 0x51,
            0x8b, 0x2d, 0x4b, 0x70, 0xdd, 0xf4, 0x5a, 0xbe, 0xfb, 0x40, 0x05, 0xdf, 0x60, 0xa1, 0x87, 0x45,
            0xee, 0x3b, 0xa2, 0x15, 0xe1, 0x36, 0xdb, 0x6f, 0xb2, 0xdd, 0xe7, 0x5f, 0xc1, 0x75, 0xb7, 0xc1,
            0x0b, 0x4f, 0xb7, 0x81, 0xf0, 0x2a, 0xd0, 0x21, 0x90, 0xf1, 0x97, 0x55, 0x93, 0x40, 0x1f, 0x60,
            0xa1, 0x87, 0x45, 0xee, 0x3b, 0xa2, 0x13, 0x57, 0x5e, 0x10, 0x2e, 0xb2, 0xdb, 0x2d, 0xbb, 0x76,
            0xf8, 0x70, 0x02, 0x16, 0x9f, 0x05, 0xf6, 0x9b, 0x55, 0xa0, 0x43, 0x21, 0xe3, 0x2e, 0xab, 0x26,
            0x80, 0x3f, 0x60, 0x9a, 0x31, 0xaa, 0x94, 0xeb, 0x20, 0xd2, 0x41, 0x59, 0x9d, 0x92, 0x74, 0x92,
            0x6a, 0x9d, 0x96, 0x84, 0x89, 0xee, 0xf2, 0x55, 0x1a, 0x1e, 0x09, 0x9f, 0x13, 0x3f, 0x60, 0x89,
            0x9c, 0x68, 0xe4, 0x58, 0xf0, 0x9e, 0xa4, 0xc0, 0x1f, 0x60, 0xf7, 0xdd, 0xa3, 0x0d, 0xe3, 0x9f,
            0xa9, 0x8a, 0xfb, 0x6e, 0x40, 0x35, 0x59, 0x85, 0xa5, 0x59, 0x85, 0x57, 0x6e, 0x99, 0x56, 0x61,
            0x02, 0xac, 0xdd, 0x42, 0xac, 0xc2, 0xd2, 0xac, 0xc2, 0xa8, 0x84, 0x27, 0xd9, 0x65, 0x51, 0x09,
            0x56, 0x6e, 0x99, 0x56, 0x61, 0x0a, 0xac, 0xdd, 0x42, 0xac, 0xc2, 0xd0, 0x15, 0x66, 0x15, 0x44,
            0x26, 0xa4, 0x70, 0xb1, 0xb6, 0x26, 0x9e, 0x64, 0x32, 0x39, 0x20, 0x5c, 0x01, 0x59, 0x64, 0x8e,
            0x14, 0x65, 0x71, 0xc7, 0x19, 0x01, 0x64, 0x91, 0xa2, 0x3e, 0x01, 0x0e, 0x45, 0x44, 0x25, 0x59,
            0xba, 0x65, 0x59, 0x84, 0x4a, 0xb3, 0x74, 0xca, 0xb3, 0x08, 0x5c, 0x69, 0xc7, 0xde, 0x03, 0x6d,
            0x38, 0xab, 0x37, 0x4c, 0xab, 0x30, 0xb2, 0xab, 0x37, 0x4c, 0xab, 0x30, 0x89, 0x56, 0x6e, 0xaa,
            0xed, 0xff, 0x60, 0x98, 0x18, 0xe9, 0x89, 0x32, 0x44, 0x4a, 0xcb, 0xe6, 0x2a, 0x8a, 0x9f, 0x07,
            0xb3, 0xac, 0x01, 0x71, 0xa6, 0xc4, 0x06, 0xdf, 0x74, 0x4e, 0x81, 0xcf, 0x60, 0x90, 0x18, 0xe9,
            0x8a, 0x81, 0xa1, 0x30, 0x05, 0xc6, 0x9b, 0x10, 0x1b, 0x7d, 0xd1, 0x3a, 0x07, 0x3f, 0x60, 0xfe,
            0x87, 0x45, 0xee, 0x31, 0x0a, 0xf0, 0x9b, 0x6d, 0xb7, 0xd9, 0x6e, 0xf3, 0xaf, 0xe0, 0xba, 0xdb,
            0xe0, 0x85, 0xa7, 0xdb, 0xc0, 0xf8, 0x15, 0x68, 0x10, 0xc8, 0x78, 0xcb, 0xaa, 0xc9, 0xa0, 0x58,
            0x21, 0x13, 0x41, 0x03, 0x8e, 0x3c, 0x05, 0x5d, 0xbd, 0xa2, 0xf6, 0x4b, 0xfb, 0xf7, 0x2a, 0xed,
            0xe0, 0xbe, 0x06, 0x82, 0xab, 0xb7, 0xb4, 0x5e, 0xd1, 0x92, 0xfa, 0xae, 0xde, 0x6d, 0xf7, 0x82,
            0xe3, 0xa0, 0x6d, 0x96, 0x9b, 0x13, 0x2e, 0x36, 0xf8, 0x1d, 0x71, 0xb7, 0x9a, 0x74, 0x02, 0x6c,
            0x2f, 0x32, 0xe0, 0x9d, 0x79, 0xf6, 0x40, 0xf8, 0x15, 0x76, 0xf6, 0x8b, 0xda, 0xb5, 0xef, 0xd5,
            0xc3, 0x7a, 0xc1, 0x71, 0xa6, 0xc4, 0x16, 0x42, 0xe8, 0x90, 0xab, 0xb7, 0xb4, 0xea, 0xd3, 0x81,
            0x57, 0x6f, 0x77, 0xe2, 0x5b, 0x10, 0x63, 0xd4, 0xab, 0xb7, 0x9b, 0x5c, 0x4b, 0x83, 0x60, 0xfd,
            0x87, 0x45, 0xee, 0x31, 0x09, 0xab, 0xaf, 0x08, 0x17, 0x59, 0x6d, 0x96, 0xdd, 0xbb, 0x7c, 0x38,
            0x01, 0x0b, 0x4f, 0x82, 0xfb, 0x4d, 0xaa, 0xd0, 0x21, 0x90, 0xf1, 0x97, 0x55, 0x93, 0x40, 0xb0,
            0x42, 0x26, 0x82, 0x07, 0x1c, 0x78, 0x0a, 0xbb, 0x7b, 0x45, 0xec, 0x97, 0xf7, 0xee, 0x55, 0xdb,
            0xc1, 0x7c, 0x0d, 0x32, 0xab, 0xb7, 0xb4, 0x5e, 0xd1, 0x92, 0xfa, 0xae, 0xde, 0x00, 0x99, 0x64,
            0x2d, 0x04, 0x4c, 0xbc, 0x26, 0x84, 0xf0, 0x82, 0xe3, 0x2c, 0xba, 0x06, 0x5d, 0x00, 0x59, 0x08,
            0x5b, 0x70, 0x2e, 0x84, 0x2d, 0x89, 0xb7, 0x95, 0x76, 0xf6, 0x8b, 0xda, 0xb5, 0xef, 0xd5, 0xc3,
            0x7a, 0xc1, 0x71, 0xa6, 0xc4, 0xcb, 0xcf, 0xbe, 0x04, 0x2a, 0xed, 0xed, 0x3a, 0xb4, 0xe0, 0x55,
            0xdb, 0xdd, 0xf8, 0x96, 0xc4, 0x18, 0xf5, 0x2a, 0xed, 0xe6, 0xd7, 0x12, 0xe0, 0x40, 0x03, 0x64,
            0x6e, 0x74, 0x01, 0x31
    };

    std::size_t data_sz = 868;


    HPACK::decoder_t dec;

    auto data_string = std::string_view((const char*)data, data_sz);
    auto vec = std::vector<uint8_t>(data_string.begin(), data_string.end());

    if (dec.decode(vec)) {
        for (auto& [ hdr, vlist ] : dec.headers()) {

            for(auto const& hdr_elem: vlist)
                std::cout << "Frame: header/" << hdr << ": " << hdr_elem << "\n";
        }
    } else {
        std::cout << "Frame: hpack decode error";
    }
}

TEST(HPack, RootCurl_Resp) {

    const uint8_t data[] = {
            0x20, 0x88, 0x76, 0x89, 0xaa, 0x63, 0x55, 0xe5, 0x80, 0xae, 0x16, 0x97, 0x17, 0x61, 0x96, 0xdc,
            0x34, 0xfd, 0x28, 0x17, 0xd4, 0xc2, 0x58, 0xd4, 0x10, 0x04, 0x25, 0x02, 0x0b, 0x81, 0x76, 0xe3,
            0x4d, 0xa9, 0x8b, 0x46, 0xff, 0x5f, 0x92, 0x49, 0x7c, 0xa5, 0x89, 0xd3, 0x4d, 0x1f, 0x6a, 0x12,
            0x71, 0xd8, 0x82, 0xa6, 0x0e, 0x1b, 0xf0, 0xac, 0xf7, 0x5c, 0x05, 0x33, 0x34, 0x39, 0x39, 0x34,
            0x00, 0x91, 0x42, 0x6c, 0x31, 0x12, 0xb2, 0x6c, 0x1d, 0x48, 0xac, 0xf6, 0x25, 0x64, 0x14, 0x96,
            0xd8, 0x64, 0xfa, 0xa0, 0xa4, 0x7e, 0x56, 0x1c, 0xc5, 0x81, 0xc6, 0x40, 0xe8, 0x80, 0x00, 0x7d,
            0xa8, 0x6a, 0x89, 0x45, 0xb2, 0x17, 0x75, 0xb1, 0xdf, 0x3d, 0x23, 0x35, 0x48, 0xfb, 0x52, 0xbb,
            0x0b, 0x41, 0xc7, 0x27, 0x00, 0x91, 0xf2, 0xb5, 0x45, 0x4f, 0x83, 0xd9, 0xd6, 0x91, 0xd4, 0x39,
            0x8b, 0x62, 0xc8, 0x48, 0xd3, 0x6a, 0x3f, 0x85, 0x3d, 0x54, 0x1a, 0xa2, 0xff, 0x00, 0x87, 0x41,
            0x52, 0xb1, 0x0e, 0x7e, 0xa6, 0x2f, 0xe2, 0x31, 0xaa, 0x94, 0xeb, 0x20, 0xd2, 0x41, 0x59, 0x9d,
            0x92, 0x74, 0x92, 0x6a, 0x9d, 0x96, 0x84, 0x89, 0xee, 0xf2, 0x55, 0x1a, 0x1e, 0x09, 0x9f, 0x13,
            0x3f, 0x6a, 0x17, 0xcd, 0x66, 0xb0, 0xa8, 0x83, 0x7d, 0xa5, 0xfa, 0x50, 0x01, 0x5b, 0x40, 0xec,
            0x58, 0x40, 0x10, 0x94, 0x08, 0x2e, 0x05, 0xdb, 0x8d, 0x36, 0xa6, 0x2d, 0x1b, 0xfe, 0xd4, 0xd0,
            0x3f, 0x2b, 0x43, 0x31, 0x60, 0x79, 0xc6, 0x80, 0x00, 0x7d, 0xa9, 0x58, 0xd3, 0x3c, 0x0c, 0x7d,
            0xa9, 0x21, 0xe9, 0x19, 0xaa, 0x81, 0x7b, 0x0e, 0x74, 0xae, 0x4f, 0x7f, 0x6a, 0x20, 0xa4, 0xb6,
            0xc2, 0xfd, 0xa9, 0x8d, 0x29, 0xaf, 0x55, 0x54, 0x7a, 0x00, 0x85, 0x2f, 0x9a, 0xcd, 0x61, 0x51,
            0x96, 0xdf, 0x3d, 0xbf, 0x4a, 0x05, 0xf5, 0x34, 0x9f, 0xba, 0x81, 0x7d, 0xe0, 0xa8, 0x07, 0xae,
            0x36, 0x2b, 0x80, 0x02, 0x98, 0xb4, 0x6f, 0x00, 0x89, 0x20, 0xc9, 0x39, 0x56, 0x21, 0xea, 0x4d,
            0x87, 0xa3, 0x99, 0xa8, 0xeb, 0x21, 0x27, 0xb0, 0xbf, 0x4a, 0x54, 0x75, 0x88, 0x32, 0x4e, 0x5f,
            0xa5, 0x29, 0xb5, 0x09, 0x5a, 0xc2, 0xf7, 0x1d, 0x06, 0x90, 0x69, 0x2f, 0x00, 0x85, 0xae, 0xc1,
            0xcd, 0x48, 0xff, 0x86, 0xa8, 0xeb, 0x10, 0x64, 0x9c, 0xbf, 0x00, 0x04, 0x76, 0x61, 0x72, 0x79,
            0x98, 0xfc, 0x5b, 0x69, 0x7b, 0x5a, 0x54, 0x24, 0xb2, 0x2d, 0xc8, 0xc9, 0x9f, 0xea, 0x12, 0x10,
            0xb5, 0xa5, 0x6c, 0x15, 0x10, 0xf2, 0x1a, 0xa9, 0xbf, 0x00, 0x90, 0x21, 0xea, 0x49, 0x6a, 0x4a,
            0xc8, 0x29, 0x2d, 0xb0, 0xc9, 0xf4, 0xb5, 0x67, 0xa0, 0xc4, 0xf5, 0x92, 0xb6, 0xb9, 0xac, 0x1c,
            0x85, 0x58, 0xd5, 0x20, 0xa4, 0xb6, 0xc2, 0xad, 0x61, 0x7b, 0x5a, 0x54, 0x25, 0x1f, 0x00, 0x8b,
            0x21, 0xea, 0x49, 0x6a, 0x4a, 0xc5, 0xa8, 0x87, 0x90, 0xd5, 0x4d, 0x83, 0x9b, 0xd9, 0xab, 0x00,
            0x8c, 0xf2, 0xb4, 0x63, 0x27, 0x52, 0xd5, 0x22, 0xc8, 0x2d, 0x9d, 0xcb, 0x67, 0x97, 0xf0, 0x58,
            0xc4, 0xa5, 0xf8, 0x02, 0xe0, 0x1f, 0x75, 0x95, 0x13, 0x00, 0x5c, 0x69, 0xb1, 0x38, 0xdb, 0xce,
            0x36, 0x20, 0x00, 0x01, 0x6b, 0x00, 0x8b, 0xb0, 0xb2, 0x96, 0xcb, 0x0b, 0x62, 0xd5, 0x9e, 0x83,
            0x13, 0xd7, 0x93, 0xa8, 0xeb, 0x58, 0x59, 0x4b, 0x65, 0x85, 0xb1, 0x6f, 0x13, 0x96, 0xa5, 0xa4,
            0x3f, 0x8a, 0xa6, 0xb0, 0x72, 0x17, 0x00, 0x93, 0x19, 0x08, 0x54, 0x21, 0x62, 0x1e, 0xa4, 0xd8,
            0x7a, 0x16, 0x1d, 0x14, 0x1f, 0xc2, 0xd3, 0x94, 0x72, 0x16, 0xcf, 0x01, 0x2a, 0x00, 0x8c, 0xf2,
            0xb4, 0x63, 0x27, 0x52, 0xd5, 0x22, 0xc8, 0x2d, 0x9d, 0xcb, 0x67, 0x86, 0xf0, 0x58, 0xd9, 0x5a,
            0xa2, 0xf8
    };
     std::size_t data_sz = 530;


    HPACK::decoder_t dec;

    auto data_string = std::string_view((const char*)data, data_sz);
    auto vec = std::vector<uint8_t>(data_string.begin(), data_string.end());

    if (dec.decode(vec)) {
        for (auto& [ hdr, vlist ] : dec.headers()) {

            for(auto const& hdr_elem: vlist)
                std::cout << "Frame: header/" << hdr << ": " << hdr_elem << "\n";
        }
    } else {
        std::cout << "Frame: hpack decode error";
    }
}


TEST(HPack, Test3) {
    unsigned char data[] = {
            0x82, 0x41, 0x8a, 0xf1, 0xe3, 0xc2, 0xe8, 0x2f, 0xba, 0x87, 0x4a, 0xe4, 0xf7, 0x87, 0x84, 0x40,
            0x85, 0xae, 0xc1, 0xcd, 0x48, 0xff, 0x86, 0xa8, 0xeb, 0x10, 0x64, 0x9c, 0xbf, 0x58, 0x86, 0xa8,
            0xeb, 0x10, 0x64, 0x9c, 0xbf, 0x40, 0x92, 0xb6, 0xb9, 0xac, 0x1c, 0x85, 0x58, 0xd5, 0x20, 0xa4,
            0xb6, 0xc2, 0xad, 0x61, 0x7b, 0x5a, 0x54, 0x25, 0x1f, 0x01, 0x31, 0x7a, 0xd1, 0xd0, 0x7f, 0x66,
            0xa2, 0x81, 0xb0, 0xda, 0xe0, 0x53, 0xfa, 0xfc, 0x08, 0x7e, 0xd4, 0xce, 0x6a, 0xad, 0xf2, 0xa7,
            0x97, 0x9c, 0x89, 0xc6, 0xbf, 0xb5, 0x21, 0xae, 0xba, 0x0b, 0xc8, 0xb1, 0xe6, 0x32, 0x58, 0x6d,
            0x97, 0x57, 0x65, 0xc5, 0x3f, 0xac, 0xd8, 0xf7, 0xe8, 0xcf, 0xf4, 0xa5, 0x06, 0xea, 0x55, 0x31,
            0x14, 0x9d, 0x4f, 0xfd, 0xa9, 0x7a, 0x7b, 0x0f, 0x49, 0x58, 0x7d, 0xe5, 0xc0, 0xbb, 0x4e, 0xb6,
            0xf2, 0xef, 0x3a, 0xa6, 0xe1, 0xca, 0x3b, 0x0c, 0xc3, 0x6c, 0xba, 0xbb, 0x2e, 0x7f, 0x53, 0xe5,
            0x49, 0x7c, 0xa5, 0x89, 0xd3, 0x4d, 0x1f, 0x43, 0xae, 0xba, 0x0c, 0x41, 0xa4, 0xc7, 0xa9, 0x8f,
            0x33, 0xa6, 0x9a, 0x3f, 0xdf, 0x9a, 0x68, 0xfa, 0x1d, 0x75, 0xd0, 0x62, 0x0d, 0x26, 0x3d, 0x4c,
            0x79, 0xa6, 0x8f, 0xbe, 0xd0, 0x01, 0x77, 0xfe, 0x8d, 0x48, 0xe6, 0x2b, 0x03, 0xee, 0x69, 0x7e,
            0x8d, 0x48, 0xe6, 0x2b, 0x1e, 0x0b, 0x1d, 0x7f, 0x46, 0xa4, 0x73, 0x15, 0x81, 0xd7, 0x54, 0xdf,
            0x5f, 0x2c, 0x7c, 0xfd, 0xf6, 0x80, 0x0b, 0xbd, 0xf4, 0x3a, 0xeb, 0xa0, 0xc4, 0x1a, 0x4c, 0x7a,
            0x98, 0x41, 0xa6, 0xa8, 0xb2, 0x2c, 0x5f, 0x24, 0x9c, 0x75, 0x4c, 0x5f, 0xbe, 0xf0, 0x46, 0xcf,
            0xdf, 0x68, 0x00, 0xbb, 0xff, 0x40, 0x85, 0x41, 0x48, 0xb4, 0xd5, 0x93, 0x01, 0x31, 0x40, 0x8a,
            0x41, 0x48, 0xb4, 0xa5, 0x49, 0x27, 0x59, 0x06, 0x49, 0x7f, 0x88, 0x40, 0xe9, 0x2a, 0xc7, 0xb0,
            0xd3, 0x1a, 0xaf, 0x40, 0x8a, 0x41, 0x48, 0xb4, 0xa5, 0x49, 0x27, 0x5a, 0x93, 0xc8, 0x5f, 0x86,
            0xa8, 0x7d, 0xcd, 0x30, 0xd2, 0x5f, 0x40, 0x8a, 0x41, 0x48, 0xb4, 0xa5, 0x49, 0x27, 0x5a, 0xd4,
            0x16, 0xcf, 0x02, 0x3f, 0x31, 0x40, 0x8a, 0x41, 0x48, 0xb4, 0xa5, 0x49, 0x27, 0x5a, 0x42, 0xa1,
            0x3f, 0x86, 0x90, 0xe4, 0xb6, 0x92, 0xd4, 0x9f, 0x73, 0x91, 0x9d, 0x29, 0xad, 0x17, 0x18, 0x63,
            0xc7, 0x8f, 0x0b, 0xa0, 0xbe, 0xea, 0x1d, 0x2b, 0x93, 0xdb, 0x1f, 0x50, 0x8d, 0x9b, 0xd9, 0xab,
            0xfa, 0x52, 0x42, 0xcb, 0x40, 0xd2, 0x5f, 0xa5, 0x23, 0xb3, 0x51, 0x8b, 0x2d, 0x4b, 0x70, 0xdd,
            0xf4, 0x5a, 0xbe, 0xfb, 0x40, 0x05, 0xdf, 0x60, 0x93, 0x9c, 0xd5, 0x26, 0x0d, 0x1b, 0xf9, 0xf9,
            0xd1, 0xd2, 0x6f, 0x3a, 0xb7, 0xe8, 0x6b, 0x46, 0xef, 0x1e, 0x35, 0x78, 0x60, 0x95, 0x95, 0x3e,
            0x53, 0x07, 0xbd, 0x7e, 0x6d, 0xc1, 0x8f, 0x2b, 0x99, 0x41, 0xaf, 0x6e, 0x5a, 0x68, 0xec, 0xfe,
            0x97, 0x32, 0x7f, 0x60, 0x92, 0x22, 0x2c, 0x95, 0x64, 0x9f, 0xa9, 0x6a, 0x82, 0xce, 0x1c, 0x38,
            0x53, 0x84, 0x2c, 0xf5, 0x9a, 0x18, 0x3f, 0x60, 0x98, 0xe4, 0x51, 0xa6, 0x72, 0xd9, 0x9c, 0xe4,
            0x1d, 0x06, 0x4f, 0xa8, 0x2f, 0x60, 0xdd, 0x9a, 0x18, 0xb6, 0xe0, 0xd7, 0xc2, 0xee, 0x7c, 0x99,
            0xa1, 0x60, 0x9b, 0x95, 0x3e, 0x53, 0x15, 0x76, 0x16, 0x58, 0x35, 0x64, 0xbd, 0x7b, 0xf0, 0x16,
            0x99, 0xa8, 0x72, 0x43, 0x69, 0x3d, 0x9b, 0xcf, 0xe3, 0x5d, 0x2a, 0xdd, 0x0b, 0xbf, 0x60, 0x8d,
            0xed, 0x6a, 0x2a, 0xf5, 0xb2, 0xd4, 0x55, 0xea, 0x0e, 0xd6, 0xa2, 0xaf, 0x5f, 0x60, 0x86, 0x47,
            0xba, 0xac, 0xb5, 0x10, 0x7f, 0x60, 0x98, 0x25, 0x35, 0xd6, 0x5b, 0x10, 0x64, 0x25, 0x25, 0x42,
            0x48, 0x73, 0xf5, 0x31, 0x60, 0x0b, 0x8c, 0xbe, 0xd3, 0xed, 0x05, 0xd6, 0x5a, 0x75, 0xcf, 0x60,
            0x88, 0x47, 0xba, 0x89, 0x4d, 0x67, 0xa8, 0xb0, 0x07, 0xbe, 0x60, 0xef, 0x95, 0x3e, 0x53, 0x14,
            0xc5, 0x3c, 0x05, 0xf5, 0x97, 0xdc, 0x6c, 0xf1, 0xf5, 0xcc, 0x5c, 0x0d, 0xab, 0xa6, 0x04, 0x64,
            0xa6, 0x4a, 0x23, 0x07, 0x9e, 0xf1, 0x9b, 0x23, 0x9a, 0x37, 0xec, 0xb7, 0x4d, 0xfc, 0x1e, 0x73,
            0xde, 0xcb, 0x57, 0xef, 0x27, 0xf4, 0x73, 0xfc, 0xd8, 0x6d, 0x5d, 0x38, 0x78, 0xcf, 0xd2, 0x16,
            0xb4, 0xef, 0xd0, 0x8c, 0x94, 0xc9, 0x44, 0x60, 0xc3, 0xd3, 0x9f, 0xac, 0x8e, 0x68, 0xdf, 0x0f,
            0x8d, 0x17, 0xe1, 0xf1, 0x9e, 0xf6, 0x51, 0x7e, 0xfe, 0x65, 0xf6, 0x3e, 0x4f, 0xdb, 0x93, 0xa1,
            0xfd, 0xe7, 0xbd, 0x94, 0x03, 0xe4, 0x1a, 0x08, 0xce, 0xd9, 0xe3, 0xfc, 0x84, 0xda, 0xba, 0x60,
            0x16, 0x9b, 0xf0, 0x8b, 0x47, 0xb8, 0x7c, 0xea, 0xbf, 0x43, 0xff, 0x60, 0x91, 0x47, 0xba, 0xb2,
            0x23, 0x0d, 0xb4, 0x51, 0xea, 0xf1, 0xe9, 0xac, 0x69, 0x34, 0x74, 0x16, 0x00, 0xff, 0x60, 0x8d,
            0x42, 0x2b, 0x5d, 0x05, 0xf7, 0x50, 0xe9, 0x5c, 0x9e, 0xff, 0xe0, 0xe3, 0x83, 0x60, 0xb1, 0xae,
            0xd8, 0xe9, 0x1a, 0x4c, 0x45, 0xc8, 0x7a, 0x7f, 0xe6, 0x68, 0x6f, 0xf0, 0xdd, 0x83, 0x6d, 0xed,
            0x5a, 0xb3, 0x64, 0xc1, 0x00, 0x1e, 0x75, 0xa6, 0xdd, 0x13, 0x4b, 0x5d, 0x75, 0xb8, 0x56, 0x6a,
            0xfc, 0x37, 0x56, 0x79, 0xa7, 0xee, 0xac, 0xf8, 0x02, 0xfb, 0x30, 0xba, 0xf0, 0x99, 0x06, 0x1f,
            0x60, 0xa7, 0xcd, 0x0d, 0xfe, 0x1b, 0xb0, 0x6d, 0xbd, 0xab, 0x56, 0x6c, 0x98, 0x20, 0x03, 0xce,
            0xb4, 0xdb, 0xa2, 0x69, 0x6b, 0xae, 0xb7, 0x0a, 0xcd, 0x5f, 0x86, 0xea, 0xcf, 0x34, 0xfd, 0xd5,
            0x9f, 0x00, 0x5f, 0x66, 0x17, 0x5e, 0x13, 0x20, 0xc3, 0x60, 0x8b, 0x1c, 0x92, 0x9e, 0xca, 0x57,
            0xa8, 0xa9, 0xff, 0x97, 0xa0, 0x0f, 0x60, 0xb4, 0xb6, 0x43, 0x49, 0x04, 0x76, 0xf5, 0xa6, 0x6e,
            0x3a, 0x5b, 0x45, 0xe8, 0x71, 0xfe, 0x49, 0x3e, 0x3b, 0x35, 0x8f, 0x9e, 0x8d, 0x6c, 0x87, 0xaf,
            0x4b, 0xa3, 0xe1, 0xaa, 0xc9, 0xbf, 0xf4, 0x17, 0x19, 0x7d, 0xa7, 0xda, 0x0b, 0xa0, 0x79, 0xb7,
            0x7f, 0xf4, 0x17, 0x1a, 0x69, 0xf7, 0xc0, 0xfb, 0xa2, 0x65, 0xf1, 0x7f, 0x60, 0xff, 0x21, 0xae,
            0xd8, 0xe9, 0x1a, 0x4c, 0x45, 0xc8, 0x7a, 0x7f, 0xe6, 0xef, 0x55, 0x13, 0x6e, 0xfb, 0xac, 0xc0,
            0x17, 0x1a, 0x7d, 0xa7, 0x04, 0xd0, 0x00, 0xab, 0x30, 0xb8, 0xfa, 0xae, 0xde, 0x0b, 0x8d, 0x38,
            0x00, 0x38, 0xd0, 0x00, 0xab, 0x30, 0xb8, 0xca, 0xae, 0xde, 0x0b, 0x8d, 0x38, 0xf3, 0xa0, 0x68,
            0x00, 0x55, 0x98, 0x44, 0x06, 0x55, 0x76, 0xf0, 0x5c, 0x69, 0xb6, 0x9e, 0x78, 0x00, 0x02, 0xac,
            0xc2, 0x26, 0x5e, 0x88, 0x40, 0x6a, 0x27, 0xa2, 0x6d, 0xa8, 0x84, 0xd3, 0x31, 0x05, 0xd7, 0x22,
            0x13, 0x20, 0x88, 0x2f, 0x3f, 0x10, 0x99, 0x6a, 0x26, 0xe2, 0x6d, 0xc8, 0x84, 0x21, 0x44, 0xf0,
            0x62, 0x6d, 0xb8, 0x99, 0x88, 0x42, 0x04, 0x41, 0x66, 0x21, 0x06, 0x21, 0x34, 0xd4, 0x4f, 0x3d,
            0x13, 0x6e, 0xc4, 0x26, 0x59, 0x89, 0xd0, 0xc4, 0x17, 0x03, 0x10, 0x99, 0x0c, 0x41, 0x71, 0xc8,
            0x82, 0x06, 0xa2, 0x7d, 0xf8, 0x82, 0xe3, 0x71, 0x3b, 0x10, 0x84, 0xab, 0xb7, 0x82, 0xe3, 0x4d,
            0xb6, 0xeb, 0x4d, 0x00, 0x0a, 0xb3, 0x0b, 0x2d, 0xc4, 0x28, 0x82, 0xdc, 0x42, 0x13, 0x3f, 0x60,
            0xff, 0x7c, 0x2d, 0xa4, 0x3d, 0x48, 0x2d, 0x49, 0x5b, 0xb8, 0xa0, 0xbd, 0xaf, 0x6e, 0xfc, 0x51,
            0xc7, 0xaf, 0x85, 0x4b, 0x69, 0xdd, 0x7d, 0x98, 0x6f, 0x5d, 0xbd, 0xba, 0xf5, 0xfb, 0xc8, 0x87,
            0x5c, 0x50, 0xc3, 0x83, 0x5c, 0x30, 0xe4, 0xdf, 0x93, 0x25, 0xff, 0x1a, 0x36, 0x43, 0x0c, 0xd0,
            0xe6, 0x86, 0x19, 0xa1, 0xbb, 0xc2, 0x1b, 0xcd, 0x43, 0x8b, 0x64, 0x3a, 0xa6, 0x86, 0x68, 0x6e,
            0xec, 0x86, 0xf1, 0xe1, 0xc2, 0x78, 0x74, 0x4d, 0x08, 0xe1, 0x85, 0xb9, 0xaf, 0x64, 0x87, 0x21,
            0xe1, 0xdb, 0xe2, 0x1e, 0xb3, 0x5d, 0xd1, 0x35, 0xe2, 0x43, 0x95, 0xa8, 0x78, 0xec, 0x85, 0x3e,
            0x2e, 0xcf, 0x0e, 0x2c, 0xd0, 0xec, 0x86, 0xed, 0xe8, 0x6f, 0x64, 0x87, 0x01, 0x21, 0xca, 0x08,
            0x79, 0x64, 0x87, 0xde, 0xcb, 0xbe, 0x61, 0xbf, 0x6c, 0x38, 0xcd, 0x0e, 0xc9, 0xa1, 0xeb, 0xe2,
            0xee, 0xbd, 0x97, 0xba, 0xc3, 0x86, 0x98, 0x73, 0xec, 0x87, 0xf3, 0x84, 0x3e, 0x32, 0x5d, 0xaf,
            0xc5, 0xfe, 0x50, 0xe4, 0x0c, 0x3b, 0x41, 0x0f, 0x5c, 0x17, 0x74, 0x9e, 0xf3, 0x30, 0xe1, 0x6e,
            0x6c, 0xed, 0xc3, 0x36, 0xab, 0xac, 0xf0, 0xba, 0xd4, 0x37, 0x79, 0xc3, 0x87, 0x64, 0x39, 0xe6,
            0x87, 0xf6, 0x1b, 0xb0, 0xc3, 0x7f, 0x24, 0x38, 0xa6, 0x87, 0x57, 0x38, 0x4d, 0x0d, 0xec, 0xd0,
            0xe0, 0xf1, 0x0e, 0x56, 0xa1, 0xe3, 0xb2, 0x1f, 0x30, 0xdd, 0x5a, 0x1c, 0x19, 0x21, 0xc9, 0x34,
            0x3b, 0x7c, 0x42, 0x8d, 0x97, 0x69, 0x9a, 0xfd, 0xb0, 0xe4, 0xd9, 0x0e, 0xde, 0x70, 0xa6, 0x1b,
            0xb2, 0x6c, 0xbf, 0x0c, 0xd8, 0x91, 0x0e, 0xeb, 0xd0, 0xd2, 0x0b, 0xa5, 0xe7, 0x7e, 0xd9, 0xa1,
            0x86, 0x18, 0x61, 0x5f, 0x9c, 0x30, 0xc3, 0x0c, 0x30, 0xc3, 0x0c, 0x30, 0xc3, 0x60, 0xbd, 0xae,
            0xd8, 0xe9, 0x1a, 0x4c, 0x45, 0xc8, 0x7a, 0x7f, 0xe5, 0xfd, 0x7b, 0xbd, 0x54, 0x46, 0x60, 0x0b,
            0x8d, 0x36, 0xd3, 0xcf, 0x00, 0x00, 0x55, 0x98, 0x44, 0x17, 0xe2, 0x10, 0x83, 0x10, 0x84, 0xec,
            0x42, 0x65, 0xb8, 0x84, 0xd0, 0x62, 0x0b, 0xee, 0xc4, 0x20, 0x06, 0x21, 0x09, 0xc5, 0x5d, 0xbc,
            0x17, 0x1a, 0x6d, 0x90, 0xb6, 0x20, 0x01, 0x56, 0x61, 0x0b, 0xad, 0x7f, 0x60, 0x98, 0xae, 0xd8,
            0xe9, 0x1a, 0x4c, 0x45, 0xc8, 0x7a, 0x7f, 0xe1, 0x27, 0xeb, 0x7a, 0x7b, 0x0f, 0x49, 0x61, 0x8d,
            0xc7, 0x77, 0x14, 0x90, 0x05, 0x9f, 0x60, 0xf9, 0x8a, 0x22, 0x12, 0x01, 0xfe, 0x57, 0x5c, 0x9c,
            0x70, 0xd7, 0xab, 0x7e, 0x07, 0x47, 0x87, 0x9b, 0x64, 0xc0, 0x9f, 0x3b, 0x69, 0x4b, 0x9b, 0x71,
            0xc2, 0x0e, 0x5c, 0xb2, 0xdf, 0xd1, 0x7d, 0x38, 0xc7, 0xc9, 0xbc, 0x5c, 0x7a, 0xed, 0xe1, 0xcb,
            0x07, 0x96, 0xb6, 0x08, 0x36, 0x6c, 0x66, 0x16, 0xb5, 0x7b, 0xc0, 0x2d, 0x37, 0xf8, 0x7b, 0xd5,
            0x7f, 0x23, 0x7a, 0xaf, 0xe8, 0xb9, 0xbb, 0xa4, 0xf7, 0x89, 0x4f, 0x9e, 0x7b, 0x45, 0xcd, 0xdd,
            0xfc, 0x13, 0x7b, 0x8e, 0xff, 0xdb, 0xdc, 0x2a, 0xd3, 0x4e, 0xca, 0x78, 0x0b, 0x8f, 0xbc, 0xb8,
            0xcb, 0xbd, 0x00, 0x2e, 0x3f, 0xdc, 0xdb, 0x81, 0x3f, 0xec, 0x7c, 0x36, 0xe5, 0xe0, 0x2a, 0xf5,
            0xfe, 0xe1, 0xc3, 0x46, 0xaf, 0x78, 0x05, 0xa6, 0xff, 0x0f, 0x7a, 0xb7, 0x93, 0xde, 0xab, 0xfa,
            0x3f, 0x60, 0x8d, 0x47, 0xba, 0x88, 0x8b, 0x20, 0x0b, 0x8d, 0x36, 0xcb, 0x8f, 0x36, 0xf3, 0x5f,
            0x60, 0xc4, 0xa2, 0xb4, 0x40, 0x5f, 0x59, 0x65, 0xfd, 0xab, 0x2d, 0x04, 0x14, 0xc6, 0xd5, 0x4f,
            0xec, 0xf1, 0xe3, 0xd3, 0x46, 0x7b, 0xd9, 0x65, 0x26, 0x2e, 0x3e, 0xa3, 0xe5, 0x86, 0xdf, 0xde,
            0x4d, 0x83, 0x27, 0x4a, 0xc0, 0x4a, 0xb8, 0xd1, 0x2e, 0xc5, 0xf0, 0xeb, 0xd7, 0x49, 0xa1, 0x5f,
            0x3e, 0xac, 0x3a, 0xbb, 0xd1, 0xc2, 0x21, 0x55, 0x75, 0xe3, 0x72, 0xa3, 0xd0, 0x99, 0x87, 0x55,
            0xb4, 0xd9, 0x83, 0xae, 0x90, 0x7f, 0x60, 0xc9, 0x41, 0xa4, 0x80, 0xd2, 0x40, 0x16, 0x9c, 0x7d,
            0xd6, 0x5a, 0x7c, 0x4f, 0x36, 0xfb, 0xcf, 0xba, 0xd3, 0xae, 0x85, 0xff, 0xf8, 0x98, 0x02, 0xe3,
            0x4d, 0x34, 0xfb, 0x81, 0x79, 0xd5, 0xdd, 0x74, 0x1f, 0xf1, 0x25, 0x80, 0x2e, 0x34, 0xd8, 0x82,
            0xf0, 0x9f, 0x12, 0xee, 0x38, 0xcf, 0xfc, 0x24, 0x00, 0x6a, 0x1c, 0x0d, 0xbe, 0x0c, 0x37, 0xae,
            0xde, 0x7c, 0x0d, 0xb4, 0x0c, 0x37, 0x6f, 0x05, 0xd7, 0x5c, 0xbc, 0xe8, 0x5e, 0x72, 0x17, 0xdd,
            0x6b, 0x60, 0xca, 0x41, 0xa4, 0x80, 0xd2, 0x40, 0x16, 0x9c, 0x7d, 0xd6, 0x5a, 0x7c, 0x4f, 0x36,
            0xfb, 0xcf, 0xba, 0xd3, 0xae, 0x85, 0xff, 0xf8, 0x98, 0x02, 0xe3, 0x4d, 0x34, 0xfb, 0x81, 0x79,
            0xd5, 0xdd, 0x74, 0x1f, 0xf1, 0x25, 0x80, 0x2e, 0x34, 0xdb, 0x2e, 0x3c, 0xdb, 0xcd, 0x2e, 0xeb,
            0xee, 0x7f, 0xc2, 0x40, 0xfe, 0x06, 0x70, 0xdf, 0x7c, 0x21, 0x86, 0xf0, 0x5a, 0x6d, 0xa6, 0x9a,
            0xbc, 0x00, 0x61, 0x73, 0x03, 0xcf, 0x3b, 0x81, 0xd6, 0xb0, 0x38, 0xeb, 0x9f, 0x40, 0x03, 0x64,
            0x6e, 0x74, 0x01, 0x31

    };

    size_t data_sz = 1732;

    HPACK::decoder_t dec;

    auto data_string = std::string_view((const char*)data, data_sz);
    auto vec = std::vector<uint8_t>(data_string.begin(), data_string.end());

    decode_print(vec);
}


TEST(Hpack, Test4) {
    unsigned char data[] = {
            0x60, 0xbd, 0xae, 0xd8, 0xe9, 0x1a, 0x4c, 0x45, 0xc8, 0x7a, 0x7f, 0xe5, 0xfd, 0x7b, 0xbd, 0x54,
            0x46, 0x60, 0x0b, 0x8d, 0x36, 0xd3, 0xcf, 0x00, 0x00, 0x55, 0x98, 0x44, 0x17, 0xe2, 0x10, 0x83,
            0x10, 0x84, 0xec, 0x42, 0x65, 0xb8, 0x84, 0xd0, 0x62, 0x0b, 0xee, 0xc4, 0x20, 0x06, 0x21, 0x09,
            0xc5, 0x5d, 0xbc, 0x17, 0x1a, 0x6d, 0x90, 0xb6, 0x20, 0x01, 0x56, 0x61, 0x0b, 0xad, 0x7f

    };
    size_t data_sz = 63;


    std::string dat((const char*)data, data_sz);
    auto vec = std::vector<uint8_t>(dat.begin(), dat.end());

    decode_print(vec);
}

TEST(Hpack, Test5) {
    unsigned char data[] = {
            0x60, 0xff, 0x21, 0xae, 0xd8, 0xe9, 0x1a, 0x4c, 0x45, 0xc8, 0x7a, 0x7f, 0xe6, 0xef, 0x55, 0x13,
            0x6e, 0xfb, 0xac, 0xc0, 0x17, 0x1a, 0x7d, 0xa7, 0x04, 0xd0, 0x00, 0xab, 0x30, 0xb8, 0xfa, 0xae,
            0xde, 0x0b, 0x8d, 0x38, 0x00, 0x38, 0xd0, 0x00, 0xab, 0x30, 0xb8, 0xca, 0xae, 0xde, 0x0b, 0x8d,
            0x38, 0xf3, 0xa0, 0x68, 0x00, 0x55, 0x98, 0x44, 0x06, 0x55, 0x76, 0xf0, 0x5c, 0x69, 0xb6, 0x9e,
            0x78, 0x00, 0x02, 0xac, 0xc2, 0x26, 0x5e, 0x88, 0x40, 0x6a, 0x27, 0xa2, 0x6d, 0xa8, 0x84, 0xd3,
            0x31, 0x05, 0xd7, 0x22, 0x13, 0x20, 0x88, 0x2f, 0x3f, 0x10, 0x99, 0x6a, 0x26, 0xe2, 0x6d, 0xc8,
            0x84, 0x21, 0x44, 0xf0, 0x62, 0x6d, 0xb8, 0x99, 0x88, 0x42, 0x04, 0x41, 0x66, 0x21, 0x06, 0x21,
            0x34, 0xd4, 0x4f, 0x3d, 0x13, 0x6e, 0xc4, 0x26, 0x59, 0x89, 0xd0, 0xc4, 0x17, 0x03, 0x10, 0x99,
            0x0c, 0x41, 0x71, 0xc8, 0x82, 0x06, 0xa2, 0x7d, 0xf8, 0x82, 0xe3, 0x71, 0x3b, 0x10, 0x84, 0xab,
            0xb7, 0x82, 0xe3, 0x4d, 0xb6, 0xeb, 0x4d, 0x00, 0x0a, 0xb3, 0x0b, 0x2d, 0xc4, 0x28, 0x82, 0xdc,
            0x42, 0x13, 0x3f
    };
    size_t data_sz = 163;



    std::string dat((const char*)data, data_sz);
    auto vec = std::vector<uint8_t>(dat.begin(), dat.end());

    decode_print(vec);
}


TEST(Hpack, Test6) {
    unsigned char data[] = {
            0x82, 0xde, 0x87, 0x04, 0xff, 0x80, 0x01, 0x62, 0x26, 0x10, 0x44, 0x31, 0x48, 0xcd, 0x42, 0xc8,
            0x48, 0xd2, 0x62, 0x31, 0x13, 0x1d, 0x10, 0xc7, 0x58, 0x26, 0xa4, 0x66, 0xa1, 0x7a, 0x46, 0x6a,
            0x97, 0x22, 0x17, 0xce, 0xfe, 0xed, 0xd3, 0x46, 0x7b, 0xf8, 0x47, 0xe1, 0x72, 0xa1, 0xb5, 0xf5,
            0x30, 0x3a, 0x60, 0xf1, 0x9b, 0xf1, 0xae, 0xed, 0x6c, 0x8a, 0x13, 0x5f, 0x99, 0x69, 0x2d, 0xbb,
            0x57, 0x81, 0x62, 0xbd, 0xb0, 0x9a, 0xa6, 0xc5, 0x7e, 0x7d, 0xd0, 0xdf, 0x9f, 0x00, 0xb3, 0x7e,
            0xd1, 0xb7, 0x2d, 0x8b, 0x64, 0xd5, 0xbd, 0xdb, 0xeb, 0x64, 0x8a, 0xb8, 0x61, 0x7f, 0x12, 0x3c,
            0xe2, 0x87, 0xd4, 0x3a, 0x36, 0x3f, 0x0f, 0x90, 0x62, 0x86, 0xff, 0x8f, 0x10, 0xc3, 0x0c, 0x30,
            0xc3, 0x0c, 0x30, 0xc3, 0x0c, 0x30, 0xc3, 0x0c, 0x30, 0xc3, 0x0d, 0xf4, 0x42, 0x6e, 0xb8, 0xa1,
            0xf0, 0xc4, 0x90, 0x05, 0x82, 0xf9, 0xa6, 0x01, 0xfd, 0x46, 0xc1, 0x64, 0x80, 0x2c, 0x1a, 0x98,
            0x02, 0xc4, 0x93, 0x40, 0x06, 0x23, 0xb2, 0x00, 0xb1, 0xe1, 0x30, 0x05, 0x8b, 0x11, 0x04, 0x38,
            0xf1, 0x72, 0xec, 0xfd, 0xd7, 0xb8, 0x83, 0x47, 0xee, 0x84, 0xa3, 0x61, 0x2f, 0x35, 0x3f, 0x8b,
            0xd8, 0x03, 0x7d, 0xb9, 0x33, 0x75, 0xbe, 0xd2, 0xdc, 0xe6, 0x60, 0x91, 0xc1, 0x41, 0xc7, 0x21,
            0x64, 0x88, 0x4c, 0x53, 0x05, 0x3f, 0x54, 0xc4, 0x6f, 0xa3, 0x08, 0x1d, 0x25, 0x93, 0xea, 0x8c,
            0xd6, 0x72, 0xf2, 0x4f, 0xa9, 0xfa, 0xf4, 0xfc, 0xcb, 0xf5, 0x37, 0x3d, 0x54, 0x39, 0x27, 0xd6,
            0x3f, 0xcc, 0xfd, 0x32, 0x47, 0xf5, 0x7f, 0x3b, 0xdd, 0x3f, 0x4b, 0xf5, 0xe4, 0x7b, 0x09, 0xe8,
            0xbf, 0x47, 0xdb, 0x4e, 0x34, 0xfd, 0x60, 0x0e, 0xb0, 0x75, 0x93, 0xea, 0xbc, 0x0f, 0x8a, 0x88,
            0xfe, 0xbb, 0x88, 0xb8, 0x2e, 0x93, 0xdd, 0xdc, 0xdb, 0xda, 0xd9, 0xd8, 0xd7, 0xd6, 0xd5, 0xd4,
            0xd3, 0xd2, 0xd1, 0xd0, 0xcf, 0xce, 0xcd, 0xcc, 0xcb, 0xca, 0xc9, 0xc8, 0xc7, 0xc6, 0xc5, 0xc4,
            0xc3, 0xc2, 0xc1, 0x60, 0xc3, 0xdd, 0x92, 0xfd, 0xeb, 0xd0, 0x43, 0x94, 0xcd, 0x6c, 0x97, 0x11,
            0x1e, 0xd3, 0x6a, 0x36, 0xe3, 0xe5, 0xd7, 0x86, 0x7d, 0x57, 0x71, 0xf5, 0xcf, 0xa5, 0x6a, 0x78,
            0xb7, 0xb2, 0x1e, 0x32, 0x4f, 0xc3, 0x17, 0xec, 0x7a, 0xb8, 0x6b, 0xdf, 0xc2, 0xeb, 0x3b, 0xb3,
            0x42, 0xe5, 0x98, 0x78, 0xe8, 0xcc, 0x5c, 0x15, 0xee, 0xc4, 0xef, 0x26, 0xf6, 0xea, 0xc2, 0xb1,
            0xff, 0x47, 0x51, 0xcd, 0xab, 0x49, 0xeb, 0xab, 0x60, 0xcb, 0x8a, 0x2d, 0xc5, 0x25, 0xb6, 0x15,
            0x66, 0x75, 0xee, 0xc9, 0x7e, 0xf5, 0xe8, 0x21, 0xca, 0x66, 0xb6, 0x4b, 0x83, 0x07, 0x47, 0x7a,
            0x4d, 0xbf, 0x0d, 0xfc, 0x1b, 0xf9, 0xe4, 0xa2, 0x6d, 0x3a, 0x33, 0x54, 0x8e, 0xde, 0x36, 0xbb,
            0x7f, 0x53, 0x2b, 0x6d, 0xe8, 0xd9, 0x79, 0x78, 0x90, 0x1a, 0x7b, 0xd4, 0xce, 0x71, 0x58, 0x02,
            0x65, 0x8b, 0x95, 0xad, 0x3f, 0xdd, 0xc8, 0xfa, 0x6f, 0xf7, 0x6d, 0x2e, 0xdb, 0x4c, 0xe7, 0xc1,
            0xd7, 0xf5, 0xbe, 0xfe, 0xff, 0xc0

    };
    size_t data_sz = 438;

    std::string dat((const char*)data, data_sz);
    auto vec = std::vector<uint8_t>(dat.begin(), dat.end());

    decode_print(vec);
}


TEST(Hpack, Test7) {
    unsigned char data[] = {
            0x88, 0xce, 0xcd, 0xcc, 0xcb, 0xca, 0xc9, 0xc8, 0x5c, 0x84, 0x10, 0x1b, 0x00, 0x9d, 0xc7, 0xc6,
            0xc5, 0x0f, 0x12, 0x96, 0xdf, 0x69, 0x7e, 0x94, 0x0b, 0x6a, 0x61, 0x2c, 0x6a, 0x08, 0x02, 0x12,
            0x80, 0x0d, 0xc1, 0x37, 0x71, 0xb6, 0x54, 0xc5, 0xa3, 0x7f, 0x64, 0x96, 0xe4, 0x59, 0x3e, 0x94,
            0x0b, 0x6a, 0x61, 0x2c, 0x6a, 0x08, 0x02, 0x65, 0x40, 0x06, 0xe0, 0x9b, 0xb8, 0xdb, 0x2a, 0x62,
            0xd1, 0xbf, 0xc4, 0x55, 0x85, 0x6c, 0x0f, 0x32, 0xf8, 0x7f, 0xc4, 0xc3, 0xc1

    };
    size_t data_sz = 77;


    std::string dat((const char*)data, data_sz);
    auto vec = std::vector<uint8_t>(dat.begin(), dat.end());

    decode_print(vec);
}

TEST(Hpack, Test8) {
    unsigned char data[] = {
            0x3f, 0xe1, 0x5f, 0x88, 0x5f, 0x92, 0x49, 0x7c, 0xa5, 0x89, 0xd3, 0x4d, 0x1f, 0x6a, 0x12, 0x71,
            0xd8, 0x82, 0xa6, 0x0b, 0x53, 0x2a, 0xcf, 0x7f, 0x40, 0x90, 0xf2, 0xb1, 0x0f, 0x52, 0x4b, 0x52,
            0x56, 0x4f, 0xaa, 0xca, 0xb1, 0xeb, 0x49, 0x8f, 0x52, 0x3f, 0x85, 0xa8, 0xe8, 0xa8, 0xd2, 0xcb,
            0x58, 0xa1, 0xa8, 0xeb, 0x10, 0x64, 0x9c, 0xbf, 0x4a, 0x54, 0x75, 0x90, 0x93, 0xd8, 0x5f, 0xa5,
            0x29, 0x1f, 0x95, 0x87, 0x31, 0x60, 0x07, 0xd2, 0x94, 0xda, 0x84, 0xad, 0x61, 0x7b, 0x8e, 0x83,
            0x48, 0x34, 0x97, 0x40, 0x85, 0xae, 0xc1, 0xcd, 0x48, 0xff, 0x86, 0xa8, 0xeb, 0x10, 0x64, 0x9c,
            0xbf, 0x64, 0x96, 0xd0, 0x7a, 0xbe, 0x94, 0x00, 0x54, 0xca, 0x3a, 0x94, 0x0b, 0xef, 0x81, 0x40,
            0x02, 0xe0, 0x01, 0x70, 0x00, 0x53, 0x16, 0x8d, 0xff, 0x0f, 0x12, 0x96, 0xd0, 0x7a, 0xbe, 0x94,
            0x10, 0x54, 0xc2, 0x58, 0xd4, 0x10, 0x04, 0x25, 0x00, 0x1b, 0x8d, 0xb5, 0x71, 0xb7, 0xd4, 0xc5,
            0xa3, 0x7f, 0x40, 0x8b, 0xf2, 0xb4, 0xb6, 0x0e, 0x92, 0xac, 0x7a, 0xd2, 0x63, 0xd4, 0x8f, 0x89,
            0xdd, 0x0e, 0x8c, 0x1a, 0xb6, 0xe4, 0xc5, 0x93, 0x4f, 0x78, 0x8c, 0xa4, 0x7e, 0x56, 0x1c, 0xc5,
            0x81, 0x90, 0xb6, 0xcb, 0x80, 0x00, 0x3f, 0x40, 0x87, 0xb0, 0xb5, 0x9e, 0xc4, 0xac, 0x93, 0xff,
            0xff, 0x1f, 0xff, 0xfd, 0xfc, 0xcd, 0x61, 0xed, 0xaf, 0xf9, 0xb9, 0xfc, 0xc3, 0xbe, 0x9f, 0xcc,
            0x10, 0xc5, 0xf9, 0xfb, 0xf9, 0x8d, 0xcb, 0xd2, 0x47, 0x65, 0x3d, 0x38, 0x7b, 0xf5, 0xbe, 0x3e,
            0x33, 0x79, 0xb4, 0x42, 0xbc, 0xf6, 0x6e, 0x78, 0xdd, 0xd2, 0x8f, 0x39, 0xa3, 0xda, 0x97, 0xda,
            0xfe, 0x7e, 0xbf, 0x9a, 0x47, 0xe6, 0x21, 0xcc, 0x5f, 0xe6, 0xe0, 0x9b, 0x7c, 0x40, 0x00, 0x3e,
            0xbf, 0x92, 0xd5, 0x25, 0x67, 0x35, 0x49, 0x47, 0xf3, 0x73, 0xff, 0x7f, 0xff, 0xbf, 0x9b, 0x6c,
            0xa3, 0xf9, 0xb9, 0xfc, 0xce, 0x94, 0xd6, 0x8b, 0x8c, 0x30, 0x44, 0x56, 0xbf, 0x83, 0x26, 0x79,
            0x8e, 0x79, 0xa8, 0x2a, 0xe4, 0x3d, 0x2c, 0x11, 0x15, 0xb1, 0x61, 0x6b, 0x3d, 0x89, 0x59, 0x27,
            0x60, 0xb5, 0x11, 0x06, 0x92, 0x28, 0x77, 0xd3, 0xf9, 0x82, 0x18, 0xbf, 0x3f, 0x7f, 0x31, 0xb9,
            0x7a, 0x48, 0xec, 0xa7, 0xa7, 0x0f, 0x7e, 0xb7, 0xc7, 0xc6, 0x6f, 0x36, 0x88, 0x57, 0x9e, 0xcd,
            0xcf, 0x1b, 0xba, 0x51, 0xe7, 0x34, 0x7b, 0x52, 0xfb, 0x5f, 0xcf, 0xff, 0xbf, 0xfc, 0xff, 0xf7,
            0x40, 0x86, 0x19, 0x08, 0x5a, 0xd2, 0xb1, 0x27, 0xf3, 0xdc, 0x52, 0x2d, 0x7b, 0x1a, 0xdc, 0x21,
            0x5a, 0x1b, 0x09, 0x3f, 0xd2, 0x9b, 0x8a, 0x45, 0xaf, 0x63, 0x5b, 0x84, 0x2b, 0x5d, 0x32, 0x6a,
            0x2a, 0x11, 0xf4, 0xa6, 0xe2, 0x91, 0x6b, 0xd8, 0xd6, 0xe1, 0x0a, 0xd8, 0x6d, 0xa2, 0x85, 0xb8,
            0x96, 0xc4, 0x18, 0xf5, 0x7d, 0x29, 0xb8, 0xa4, 0x5a, 0xf6, 0x35, 0xb8, 0x42, 0xb6, 0x1b, 0x68,
            0xa1, 0x6e, 0x25, 0xb1, 0x06, 0x3d, 0x4b, 0x67, 0x32, 0x13, 0xf4, 0xa6, 0xe2, 0x91, 0x6b, 0xd8,
            0xd6, 0xe1, 0x0a, 0xda, 0x0f, 0x21, 0x68, 0xfa, 0x53, 0x71, 0x48, 0xb5, 0xec, 0x6b, 0x70, 0x85,
            0x6d, 0x74, 0x0d, 0x32, 0x9e, 0xca, 0x7e, 0x94, 0xdc, 0x52, 0x2d, 0x7b, 0x1a, 0xdc, 0x21, 0x5b,
            0x5d, 0x03, 0x4c, 0xa7, 0xb2, 0x95, 0xb8, 0x96, 0xc4, 0x18, 0xf5, 0x7f, 0x40, 0x9b, 0x25, 0x87,
            0x42, 0x16, 0x3d, 0x86, 0x98, 0xd5, 0x2c, 0x7a, 0xcb, 0x51, 0x6c, 0x5a, 0xb3, 0xd0, 0x62, 0x7a,
            0x5a, 0xc2, 0xd6, 0x7b, 0x12, 0xb1, 0xea, 0xa3, 0xd7, 0xb7, 0x40, 0xe9, 0x2a, 0xc7, 0xb0, 0xd3,
            0x1a, 0xaf, 0xb5, 0x2c, 0x2d, 0x67, 0xb1, 0x2b, 0x24, 0xf0, 0x7f, 0x30, 0xef, 0xa7, 0xf3, 0x04,
            0x31, 0x7e, 0x7e, 0xfe, 0x63, 0x72, 0xf4, 0x91, 0xd9, 0x4f, 0x4e, 0x1e, 0xfd, 0x6f, 0x8f, 0x8c,
            0xde, 0x6d, 0x10, 0xaf, 0x3d, 0x9b, 0x9e, 0x37, 0x74, 0xa3, 0xce, 0x68, 0xf6, 0xa5, 0xf6, 0xbf,
            0x9f, 0x40, 0x8d, 0xac, 0xb6, 0x52, 0x64, 0x20, 0xc7, 0xa9, 0x0b, 0x56, 0x7a, 0x0c, 0x4f, 0x5f,
            0xe5, 0x24, 0xeb, 0x5a, 0x35, 0x87, 0x61, 0x27, 0x83, 0xe7, 0xe9, 0x42, 0x4e, 0xb5, 0xa3, 0x5a,
            0x33, 0x26, 0xa2, 0xa1, 0x10, 0x7c, 0xfd, 0x28, 0x49, 0xd6, 0xb4, 0x6b, 0x4b, 0x6d, 0x14, 0x2d,
            0xdc, 0xb6, 0x20, 0xc7, 0xaa, 0x0f, 0x9f, 0xa5, 0x09, 0x3a, 0xd6, 0x8d, 0x69, 0x6d, 0xa2, 0x85,
            0xbb, 0x96, 0xc4, 0x18, 0xf5, 0x2d, 0x41, 0x90, 0x98, 0x3e, 0x7e, 0x94, 0x24, 0xeb, 0x5a, 0x35,
            0xa9, 0x3c, 0x85, 0xa2, 0x0f, 0x9f, 0xa5, 0x09, 0x3a, 0xd6, 0x8d, 0x6a, 0xe8, 0x1a, 0x65, 0x3d,
            0x94, 0xc1, 0xf3, 0xf4, 0xa1, 0x27, 0x5a, 0xd1, 0xad, 0x5d, 0x03, 0x4c, 0xa7, 0xb2, 0x95, 0xbb,
            0x96, 0xc4, 0x18, 0xf5, 0x41, 0xf3, 0x5a, 0x02, 0x62, 0x72, 0x76, 0x03, 0x45, 0x53, 0x46, 0x40,
            0x8c, 0xf2, 0xb7, 0x94, 0x21, 0x6a, 0xec, 0x3a, 0x4a, 0x44, 0x98, 0xf5, 0x7f, 0x01, 0x30, 0x0f,
            0x28, 0xff, 0x00, 0xdd, 0x92, 0xfd, 0xeb, 0xd0, 0x43, 0x94, 0xcd, 0x6c, 0x97, 0x19, 0x9c, 0xb6,
            0x2e, 0x8d, 0x8f, 0xdb, 0xfd, 0x6d, 0xc5, 0xe5, 0x1c, 0xb5, 0xdb, 0xbe, 0xef, 0x8d, 0x57, 0xaa,
            0x77, 0x1f, 0x24, 0x72, 0xde, 0x2a, 0xf1, 0x54, 0xed, 0xd6, 0x76, 0xd2, 0x0a, 0x1b, 0xef, 0xdf,
            0x3d, 0xf8, 0xee, 0xfe, 0x10, 0x17, 0x70, 0x91, 0xb6, 0xdd, 0x78, 0x5e, 0xe5, 0xed, 0x89, 0xac,
            0x9f, 0x92, 0xfe, 0x61, 0x5b, 0xed, 0x42, 0xf9, 0xac, 0xd6, 0x15, 0x10, 0x6f, 0xb4, 0xbf, 0x4a,
            0x08, 0x2b, 0x61, 0x2c, 0x6b, 0x08, 0x02, 0x65, 0x40, 0x06, 0xe3, 0x6d, 0x5c, 0x6d, 0xf5, 0x31,
            0x68, 0xdf, 0xf6, 0xa5, 0x63, 0x4c, 0xf0, 0x31, 0xf6, 0xa4, 0x87, 0xa4, 0x66, 0xaa, 0x05, 0xfd,
            0x1e, 0xd4, 0xdb, 0x19, 0x57, 0x21, 0xe9, 0xfb, 0x52, 0xbb, 0x0c, 0x7b, 0x0c, 0x9f, 0x50, 0x4e,
            0x69, 0xa7, 0x0f, 0x28, 0xff, 0x21, 0x8a, 0x2d, 0xc5, 0x25, 0xb6, 0x15, 0x66, 0x75, 0xee, 0xc9,
            0x7e, 0xf5, 0xe8, 0x21, 0xca, 0x66, 0xb6, 0x4b, 0x8b, 0xd7, 0x1e, 0x51, 0x26, 0x5d, 0x35, 0xea,
            0x8d, 0x9c, 0xf4, 0x5d, 0xc1, 0x93, 0xdd, 0xff, 0x76, 0x6e, 0x92, 0x6b, 0xda, 0xa8, 0xd3, 0xd3,
            0x96, 0x30, 0x0a, 0x84, 0x05, 0x9c, 0x31, 0xb9, 0xcc, 0x57, 0xb0, 0x66, 0xd9, 0xee, 0x31, 0x8a,
            0x84, 0x35, 0x8f, 0x63, 0xd7, 0xef, 0xf4, 0xf5, 0x9e, 0xb6, 0x4b, 0x26, 0x1a, 0x6f, 0x73, 0x47,
            0xda, 0x85, 0xf3, 0x59, 0xac, 0x2a, 0x20, 0xdf, 0x69, 0x7e, 0x94, 0x10, 0x56, 0xc2, 0x58, 0xd6,
            0x10, 0x04, 0xca, 0x80, 0x0d, 0xc6, 0xda, 0xb8, 0xdb, 0xea, 0x62, 0xd1, 0xbf, 0xed, 0x4a, 0xc6,
            0x99, 0xe0, 0x63, 0xed, 0x49, 0x0f, 0x48, 0xcd, 0x54, 0x0b, 0xfa, 0x3d, 0xa9, 0xb6, 0x32, 0xae,
            0x43, 0xd3, 0xf6, 0xa6, 0xe2, 0x92, 0xdb, 0x0b, 0xf6, 0xa6, 0x34, 0xa6, 0xbd, 0x55, 0x51, 0xeb,
            0xed, 0x4a, 0xec, 0x31, 0xec, 0x32, 0x7d, 0x41, 0x39, 0xa6, 0x9f, 0xed, 0x4d, 0xc3, 0xa4, 0xbb,
            0x8c, 0x92, 0xc1, 0x51, 0xea, 0x2f, 0x40, 0x85, 0x1d, 0x09, 0x59, 0x1d, 0xc9, 0xff, 0x01, 0x9d,
            0x98, 0x3f, 0x9b, 0x8d, 0x34, 0xcf, 0xf3, 0xf6, 0xa5, 0x23, 0x80, 0x4d, 0xbe, 0x20, 0x00, 0x1f,
            0x53, 0xb2, 0xb0, 0x9f, 0x83, 0xf9, 0xb8, 0xd3, 0x4c, 0xff, 0x3f, 0x6a, 0x52, 0x38, 0x04, 0xdb,
            0xe2, 0x00, 0x01, 0xf5, 0x3b, 0x2b, 0x6c, 0x03, 0x60, 0x83, 0xf9, 0xb8, 0xd3, 0x4c, 0xff, 0x3f,
            0x6a, 0x52, 0x38, 0x04, 0xdb, 0xe2, 0x00, 0x01, 0xf5, 0x3b, 0x2b, 0x6c, 0x03, 0x4e, 0x41, 0xfc,
            0xdc, 0x69, 0xa6, 0x7f, 0x9f, 0xb5, 0x29, 0x1c, 0x02, 0x6d, 0xf1, 0x00, 0x00, 0xfa, 0x9d, 0x95,
            0xb6, 0x01, 0xa6, 0x60, 0xfe, 0x6e, 0x34, 0xd3, 0x3f, 0xcf, 0xda, 0x94, 0x8e, 0x01, 0x36, 0xf8,
            0x80, 0x00, 0x7d, 0x76, 0xb4, 0xc4, 0x83, 0xf9, 0xb8, 0xd3, 0x4c, 0xff, 0x3f, 0x6a, 0x52, 0x38,
            0x04, 0xdb, 0xe2, 0x00, 0x01, 0xf6, 0xa7, 0x78, 0x3f, 0x96, 0x9c, 0xfa, 0x69, 0x9f, 0xe7

    };
    size_t data_sz = 1135;



    std::string dat((const char*)data, data_sz);
    auto vec = std::vector<uint8_t>(dat.begin(), dat.end());

    decode_print(vec);

}



TEST(Hpack, Test9) {

    unsigned char data[] = {
            0x88, 0x61, 0x96, 0xd0, 0x7a, 0xbe, 0x94, 0x10, 0x54, 0xc2, 0x58, 0xd4, 0x10, 0x04, 0x25, 0x00,
            0x2b, 0x8c, 0x8a, 0xe0, 0x84, 0xa6, 0x2d, 0x1b, 0xff, 0x5f, 0x90, 0x1d, 0x75, 0xd0, 0x62, 0x0d,
            0x26, 0x3d, 0x4c, 0x1c, 0x89, 0x2a, 0x56, 0x42, 0x6c, 0x28, 0xe9, 0x5c, 0x03, 0x31, 0x34, 0x34,
            0x00, 0x87, 0xb0, 0xbd, 0xad, 0x2a, 0x12, 0xb1, 0xa4, 0x8f, 0x23, 0xcf, 0xcb, 0xd2, 0x4e, 0xb2,
            0xf5, 0x35, 0x82, 0x65, 0x93, 0xa5, 0xc9, 0x24, 0x07, 0x00, 0x8b, 0x40, 0xea, 0x2a, 0xc9, 0x35,
            0x25, 0x5a, 0x93, 0x51, 0x41, 0x91, 0x89, 0x0b, 0x8d, 0x36, 0xd0, 0x40, 0xeb, 0x42, 0x00, 0x5b

    };
    size_t data_sz = 96;

    std::string dat((const char*)data, data_sz);
    auto vec = std::vector<uint8_t>(dat.begin(), dat.end());

    decode_print(vec);

}